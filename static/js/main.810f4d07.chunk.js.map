{"version":3,"sources":["logo.svg","utils/userapi.js","pages/directory.jsx","App.js","reportWebVitals.js","index.js"],"names":["fetchUsers","a","fetch","res","json","Table","useState","people","setPeople","input","setInput","order","setOrder","useEffect","then","users","results","console","log","className","type","placeholder","value","onChange","e","target","scope","onClick","filter","person","name","title","toLowerCase","startsWith","sort","b","nameA","first","toUpperCase","nameB","map","last","email","src","picture","thumbnail","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAe,I,mCCIAA,EAJC,uCAAG,4BAAAC,EAAA,sEACCC,MAAM,gDADP,cACXC,EADW,gBAEJA,EAAIC,OAFA,mFAAH,qD,OCqEDC,MA9Df,WACI,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,mBAAS,IAAjC,mBAAMG,EAAN,KAAaC,EAAb,KACA,EAAyBJ,oBAAS,GAAlC,mBAAOK,EAAP,KAAcC,EAAd,KAQJ,OANIC,qBAAU,WACNb,IACCc,MAAK,SAAAC,GAAK,OAAEP,EAAUO,EAAMC,cAE/B,IACFH,qBAAU,kBAAII,QAAQC,IAAIT,KAAQ,CAACA,IAEvC,gCACK,uBAAOU,UAAU,eAAeC,KAAK,OAAOC,YAAY,kBAAkBC,MAAOb,EACjFc,SAAU,SAAAC,GAAC,OAAEd,EAASc,EAAEC,OAAOH,UAChC,wBAAOH,UAAU,QAAjB,UACA,gCACE,+BACE,oBAAIO,MAAM,MAAV,mBACA,qBAAIA,MAAM,MAAV,mBAAsB,sBAAMP,UAAU,aAAaQ,QAAS,kBAAIf,GAAUD,IAApD,SAA6DA,EAAM,MAAM,WAC/F,oBAAIe,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kCAIJ,gCACCnB,EAAOqB,QAAO,SAAAC,GAAM,OAAGA,EAAOC,KAAKC,MAAMC,cAAcC,WAAWxB,EAAMuB,kBAAgBE,MAAK,SAACjC,EAAGkC,GAClG,IAAIC,EAAQnC,EAAE6B,KAAKO,MAAMC,cACrBC,EAAQJ,EAAEL,KAAKO,MAAMC,cACzB,GAAI3B,EAQF,CACF,GAAIyB,EAAQG,EACR,OAAQ,EAEV,GAAIH,EAAQG,EACV,OAAO,MAbD,CACN,GAAIH,EAAQG,EACR,OAAQ,EAEV,GAAIH,EAAQG,EACV,OAAO,EAab,OAAO,KACNC,KAAI,SAAAX,GAAM,OAAG,+BAChB,oBAAIH,MAAM,MAAV,SAAiBG,EAAOC,KAAKC,QAC7B,6BAAKF,EAAOC,KAAKO,QACjB,6BAAKR,EAAOC,KAAKW,OACjB,6BAAKZ,EAAOa,QACZ,6BAAI,qBAAKC,IAAKd,EAAOe,QAAQC,6BCrDlBC,MAJf,WACE,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.810f4d07.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const fetchUsers = async () => {\r\n  const res = await fetch(\"https://randomuser.me/api/?results=20&nat=us\");\r\n  return await res.json();\r\n};\r\nexport default fetchUsers;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport fetchUsers from \"../utils/userapi\"\r\n\r\n\r\n\r\n\r\n\r\nfunction Table( ){\r\n    const [people, setPeople] = useState([])\r\n    const[input, setInput]= useState('')\r\n    const [order, setOrder]= useState(false)\r\n\r\n    useEffect(() => {\r\n        fetchUsers()\r\n        .then(users=>setPeople(users.results))\r\n       }\r\n    , [])\r\n    useEffect(()=>console.log(input), [input])\r\nreturn(\r\n<div>   \r\n     <input className=\"form-control\" type=\"text\" placeholder=\"search by title\" value={input} \r\n     onChange={e=>setInput(e.target.value)}/>\r\n    <table className=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">Title</th>\r\n        <th scope=\"col\">First <span className=\"text-muted\" onClick={()=>setOrder(!order)}>{order?'z-a':'a-z'}</span></th>\r\n        <th scope=\"col\">Last</th>\r\n        <th scope=\"col\">Email</th>\r\n        <th scope=\"col\">Profile Picture</th>\r\n\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n    {people.filter(person=> person.name.title.toLowerCase().startsWith(input.toLowerCase())).sort((a, b)=>{\r\n    var nameA = a.name.first.toUpperCase(); // ignore upper and lowercase\r\n    var nameB = b.name.first.toUpperCase(); // ignore upper and lowercase\r\n    if(!order){\r\n        if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }   \r\n    }\r\n  else{\r\n    if (nameA > nameB) {\r\n        return -1;\r\n      }\r\n      if (nameA < nameB) {\r\n        return 1;\r\n      }\r\n  }\r\n    \r\n      // names must be equal\r\n      return 0;\r\n    }).map(person=> <tr>\r\n    <th scope=\"row\">{person.name.title}</th>\r\n    <td>{person.name.first}</td>\r\n    <td>{person.name.last}</td>\r\n    <td>{person.email}</td>\r\n    <td><img src={person.picture.thumbnail}/></td>\r\n    </tr>)}\r\n         </tbody>\r\n  </table>  \r\n  </div>\r\n\r\n)\r\n}\r\nexport default Table","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Table from \"./pages/directory\";\n\nfunction App() {\n  return <Table></Table>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}